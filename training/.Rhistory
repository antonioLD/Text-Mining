line <- author
tamaño=0
for(palabra in strsplit(txtdata," ")){
tamaño=tamaño+length(palabra)
}
# prueba=strsplit(txtdata," ")
#  prueba<-unlist(prueba)
#	pr<-table(prueba)
#	j=0
# for(palabra in prueba){
#    dato<-pr[names(pr)==palabra]
#   print(dato)
# }
freq <- freq_terms(txtdata, n)
for (word in vocabulary$WORD) {
thefreq <- 0
if (length(freq[freq$WORD==word,"FREQ"])>0) {
thefreq <- freq[freq$WORD==word,"FREQ"]
}
line <- paste(line, ",", thefreq, sep="")
}
# Añadimos una columna para contar el número de apariciones de los 100 adjetivos más típicos.
#La mujer tiene tendencia a utilizar más adjetivos
cuentaAdj <- 0
line <- NuevaColumna(adjetivos,cuentaAdj,line,freq)
cuentaPronombres <- 0
line <- NuevaColumna(pronombres,cuentaPronombres,line,freq)
cuentaÑoño<-0
line <- NuevaColumna(sentimientos,cuentaÑoño,line,freq)
cuentaMujer<-0
line <- NuevaColumna(mujeres,cuentaMujer,line,freq)
cuentaHombre<-0
line <- NuevaColumna(hombres,cuentaHombre,line,freq)
#añade el tamaño al final
line <- paste(line, ",", tamaño, sep="")
if (class=="variety") {
#line <- paste(line, ",", variety, sep="")
#line <- paste(variety, ",", tamaño,",",line, sep="")
line <- paste(variety, ",",line, sep="")
} else {
#line <- paste(line, ",", gender, sep="")
#line <- paste(gender, "," ,tamaño,",", line, sep="")
line <- paste(gender, ",", line, sep="")
}
bow <- rbind(bow, line)
i <- i + 1
if (verbose) {
if (class=="variety") {
print(paste(i, author, variety))
} else {
print(paste(i, author, gender))
}
}
}
return (bow)
}
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
return (prueba)
}
n <- 500
path_training <- "/home/anlodio@alumno.upv.es/Documentos/textmining/training"  # Your training path
path_test <- "/home/anlodio@alumno.upv.es/Documentos/textmining/test"			# Your test path
path_tematico<-"../Diccionarios/sentimientos.txt"
path_tematico2<-"../Diccionarios/adjetivos.txt"
path_tematico3<-"../Diccionarios/hombres.txt"
path_tematico4<-"../Diccionarios/mujeres.txt"
path_tematico5<-"../Diccionarios/pronombres.txt"
vocabulary <- GenerateVocabulary(path_training, n, swlang="es")
GenerateBoW <- function(path, vocabulary, n = 1000, lowcase = TRUE, punctuations = TRUE,accents=TRUE, numbers = TRUE, whitespaces = TRUE, swlang = "", swlist = "", class="variety", verbose = TRUE) {
setwd(path)
truth <- read.csv("truth.txt", sep=":", header=FALSE)
truth <- truth[,c(1,4,7)]
colnames(truth) <- c("author", "gender", "variety")
i <- 0
bow <- NULL
files = list.files(pattern="*.xml")
#files=files[0:1]
adjetivos<-lectorCampos(path_tematico2)
sentimientos<-lectorCampos(path_tematico)
hombres<-lectorCampos(path_tematico3)
mujeres<-lectorCampos(path_tematico4)
pronombres<-lectorCampos(path_tematico5)
for (file in files) {
author <- gsub(".xml", "", file)
variety <- truth[truth$author==author,"variety"]
gender <- truth[truth$author==author,"gender"]
xmlfile <- xmlTreeParse(file, useInternalNodes = TRUE)
txtdata <- xpathApply(xmlfile, "//document", function(x) xmlValue(x))
if (lowcase) {
txtdata <- tolower(txtdata)
}
if (punctuations) {
txtdata <- removePunctuation(txtdata)
}
if(accents){
txtdata <- chartr("áéíóú", "aeiou", txtdata)
}
if (numbers) {
txtdata <- removeNumbers(txtdata)
}
if (whitespaces) {
txtdata <- stripWhitespace(txtdata)
}
line <- author
tamaño=0
for(palabra in strsplit(txtdata," ")){
tamaño=tamaño+length(palabra)
}
# prueba=strsplit(txtdata," ")
#  prueba<-unlist(prueba)
#	pr<-table(prueba)
#	j=0
# for(palabra in prueba){
#    dato<-pr[names(pr)==palabra]
#   print(dato)
# }
freq <- freq_terms(txtdata, n)
for (word in vocabulary$WORD) {
thefreq <- 0
if (length(freq[freq$WORD==word,"FREQ"])>0) {
thefreq <- freq[freq$WORD==word,"FREQ"]
}
line <- paste(line, ",", thefreq/tamaño, sep="")
}
# Añadimos una columna para contar el número de apariciones de los 100 adjetivos más típicos.
#La mujer tiene tendencia a utilizar más adjetivos
cuentaAdj <- 0
line <- NuevaColumna(adjetivos,cuentaAdj,line,freq)
cuentaPronombres <- 0
line <- NuevaColumna(pronombres,cuentaPronombres,line,freq)
cuentaÑoño<-0
line <- NuevaColumna(sentimientos,cuentaÑoño,line,freq)
cuentaMujer<-0
line <- NuevaColumna(mujeres,cuentaMujer,line,freq)
cuentaHombre<-0
line <- NuevaColumna(hombres,cuentaHombre,line,freq)
#añade el tamaño al final
line <- paste(line, ",", tamaño, sep="")
if (class=="variety") {
#line <- paste(line, ",", variety, sep="")
#line <- paste(variety, ",", tamaño,",",line, sep="")
line <- paste(variety, ",",line, sep="")
} else {
#line <- paste(line, ",", gender, sep="")
#line <- paste(gender, "," ,tamaño,",", line, sep="")
line <- paste(gender, ",", line, sep="")
}
bow <- rbind(bow, line)
i <- i + 1
if (verbose) {
if (class=="variety") {
print(paste(i, author, variety))
} else {
print(paste(i, author, gender))
}
}
}
return (bow)
}
bow_training <- GenerateBoW(path_training, vocabulary, n, class="gender")
bow_test <- GenerateBoW(path_test, vocabulary, n, class="gender")
training <- cSplit(bow_training, "V1", ",") # Hace la trasposicion de la matriz para que cada fila será un autor y las columnas sus palabras
test <- cSplit(bow_test, "V1", ",")
training <- training[,-2]
#training<-training[,-100:-500]
names(training)[1] <- "class"
truth  <- unlist(test[,1]) # vector con los resultados de la clase a predecir con valores reales
test <-test[,-1:-2]
train_control <- trainControl(method="none")
model_SVM <- train( class~., data= training, trControl = train_control, method = "svmLinear")
View(training)
pred_SVM <- predict(model_SVM, test)
confusionMatrix(pred_SVM, truth)
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
prueba<-removeWords(prueba, stopwords("es")
return (prueba)
}
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
return (prueba)
}
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
prueba<-removeWords(prueba, stopwords("es"))
return (prueba)
}
GenerateBoW <- function(path, vocabulary, n = 1000, lowcase = TRUE, punctuations = TRUE,accents=TRUE, numbers = TRUE, whitespaces = TRUE, swlang = "", swlist = "", class="variety", verbose = TRUE) {
setwd(path)
truth <- read.csv("truth.txt", sep=":", header=FALSE)
truth <- truth[,c(1,4,7)]
colnames(truth) <- c("author", "gender", "variety")
i <- 0
bow <- NULL
files = list.files(pattern="*.xml")
#files=files[0:1]
adjetivos<-lectorCampos(path_tematico2)
sentimientos<-lectorCampos(path_tematico)
hombres<-lectorCampos(path_tematico3)
mujeres<-lectorCampos(path_tematico4)
pronombres<-lectorCampos(path_tematico5)
for (file in files) {
author <- gsub(".xml", "", file)
variety <- truth[truth$author==author,"variety"]
gender <- truth[truth$author==author,"gender"]
xmlfile <- xmlTreeParse(file, useInternalNodes = TRUE)
txtdata <- xpathApply(xmlfile, "//document", function(x) xmlValue(x))
if (lowcase) {
txtdata <- tolower(txtdata)
}
if (punctuations) {
txtdata <- removePunctuation(txtdata)
}
if(accents){
txtdata <- chartr("áéíóú", "aeiou", txtdata)
}
if (numbers) {
txtdata <- removeNumbers(txtdata)
}
if (whitespaces) {
txtdata <- stripWhitespace(txtdata)
}
line <- author
tamaño=0
for(palabra in strsplit(txtdata," ")){
tamaño=tamaño+length(palabra)
}
# prueba=strsplit(txtdata," ")
#  prueba<-unlist(prueba)
#	pr<-table(prueba)
#	j=0
# for(palabra in prueba){
#    dato<-pr[names(pr)==palabra]
#   print(dato)
# }
freq <- freq_terms(txtdata, n)
for (word in vocabulary$WORD) {
thefreq <- 0
if (length(freq[freq$WORD==word,"FREQ"])>0) {
thefreq <- freq[freq$WORD==word,"FREQ"]
}
line <- paste(line, ",", thefreq/tamaño, sep="")
}
# Añadimos una columna para contar el número de apariciones de los 100 adjetivos más típicos.
#La mujer tiene tendencia a utilizar más adjetivos
cuentaAdj <- 0
line <- NuevaColumna(adjetivos,cuentaAdj,line,freq)
cuentaPronombres <- 0
line <- NuevaColumna(pronombres,cuentaPronombres,line,freq)
cuentaÑoño<-0
line <- NuevaColumna(sentimientos,cuentaÑoño,line,freq)
cuentaMujer<-0
line <- NuevaColumna(mujeres,cuentaMujer,line,freq)
cuentaHombre<-0
line <- NuevaColumna(hombres,cuentaHombre,line,freq)
cuentaHoroscopo<-0
line <- NuevaColumna(hombres,cuentaHoroscopo,line,freq)
#añade el tamaño al final
line <- paste(line, ",", tamaño, sep="")
if (class=="variety") {
#line <- paste(line, ",", variety, sep="")
#line <- paste(variety, ",", tamaño,",",line, sep="")
line <- paste(variety, ",",line, sep="")
} else {
#line <- paste(line, ",", gender, sep="")
#line <- paste(gender, "," ,tamaño,",", line, sep="")
line <- paste(gender, ",", line, sep="")
}
bow <- rbind(bow, line)
i <- i + 1
if (verbose) {
if (class=="variety") {
print(paste(i, author, variety))
} else {
print(paste(i, author, gender))
}
}
}
return (bow)
}
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
prueba<-removeWords(prueba, stopwords("es"))
return (prueba)
}
n <- 500
path_training <- "/home/anlodio@alumno.upv.es/Documentos/textmining/training"  # Your training path
path_test <- "/home/anlodio@alumno.upv.es/Documentos/textmining/test"			# Your test path
path_tematico<-"../Diccionarios/sentimientos.txt"
path_tematico2<-"../Diccionarios/adjetivos.txt"
path_tematico3<-"../Diccionarios/hombres.txt"
path_tematico4<-"../Diccionarios/mujeres.txt"
path_tematico5<-"../Diccionarios/pronombres.txt"
path_tematico6<-"../Diccionarios/horoscopo.txt"
bow_training <- GenerateBoW(path_training, vocabulary, n, class="gender")
bow_test <- GenerateBoW(path_test, vocabulary, n, class="gender")
training <- cSplit(bow_training, "V1", ",") # Hace la trasposicion de la matriz para que cada fila será un autor y las columnas sus palabras
test <- cSplit(bow_test, "V1", ",")
training <- training[,-2]
#training<-training[,-100:-500]
names(training)[1] <- "class"
truth  <- unlist(test[,1]) # vector con los resultados de la clase a predecir con valores reales
test <-test[,-1:-2]
train_control <- trainControl(method="none")
model_SVM <- train( class~., data= training, trControl = train_control, method = "svmLinear")
pred_SVM <- predict(model_SVM, test)
confusionMatrix(pred_SVM, truth)
View(training)
View(bow_training)
GenerateBoW <- function(path, vocabulary, n = 1000, lowcase = TRUE, punctuations = TRUE,accents=TRUE, numbers = TRUE, whitespaces = TRUE, swlang = "", swlist = "", class="variety", verbose = TRUE) {
setwd(path)
truth <- read.csv("truth.txt", sep=":", header=FALSE)
truth <- truth[,c(1,4,7)]
colnames(truth) <- c("author", "gender", "variety")
i <- 0
bow <- NULL
files = list.files(pattern="*.xml")
#files=files[0:1]
adjetivos<-lectorCampos(path_tematico2)
sentimientos<-lectorCampos(path_tematico)
hombres<-lectorCampos(path_tematico3)
mujeres<-lectorCampos(path_tematico4)
pronombres<-lectorCampos(path_tematico5)
horoscopos<-lectorCampos(path_tematico6)
for (file in files) {
author <- gsub(".xml", "", file)
variety <- truth[truth$author==author,"variety"]
gender <- truth[truth$author==author,"gender"]
xmlfile <- xmlTreeParse(file, useInternalNodes = TRUE)
txtdata <- xpathApply(xmlfile, "//document", function(x) xmlValue(x))
if (lowcase) {
txtdata <- tolower(txtdata)
}
if (punctuations) {
txtdata <- removePunctuation(txtdata)
}
if(accents){
txtdata <- chartr("áéíóú", "aeiou", txtdata)
}
if (numbers) {
txtdata <- removeNumbers(txtdata)
}
if (whitespaces) {
txtdata <- stripWhitespace(txtdata)
}
line <- author
tamaño=0
for(palabra in strsplit(txtdata," ")){
tamaño=tamaño+length(palabra)
}
# prueba=strsplit(txtdata," ")
#  prueba<-unlist(prueba)
#	pr<-table(prueba)
#	j=0
# for(palabra in prueba){
#    dato<-pr[names(pr)==palabra]
#   print(dato)
# }
freq <- freq_terms(txtdata, n)
for (word in vocabulary$WORD) {
thefreq <- 0
if (length(freq[freq$WORD==word,"FREQ"])>0) {
thefreq <- freq[freq$WORD==word,"FREQ"]
}
line <- paste(line, ",", thefreq/tamaño, sep="")
}
# Añadimos una columna para contar el número de apariciones de los 100 adjetivos más típicos.
#La mujer tiene tendencia a utilizar más adjetivos
cuentaAdj <- 0
line <- NuevaColumna(adjetivos,cuentaAdj,line,freq)
cuentaPronombres <- 0
line <- NuevaColumna(pronombres,cuentaPronombres,line,freq)
cuentaÑoño<-0
line <- NuevaColumna(sentimientos,cuentaÑoño,line,freq)
cuentaMujer<-0
line <- NuevaColumna(mujeres,cuentaMujer,line,freq)
cuentaHombre<-0
line <- NuevaColumna(hombres,cuentaHombre,line,freq)
cuentaHoroscopo<-0
line <- NuevaColumna(horoscopos,cuentaHoroscopo,line,freq)
#añade el tamaño al final
line <- paste(line, ",", tamaño, sep="")
if (class=="variety") {
#line <- paste(line, ",", variety, sep="")
#line <- paste(variety, ",", tamaño,",",line, sep="")
line <- paste(variety, ",",line, sep="")
} else {
#line <- paste(line, ",", gender, sep="")
#line <- paste(gender, "," ,tamaño,",", line, sep="")
line <- paste(gender, ",", line, sep="")
}
bow <- rbind(bow, line)
i <- i + 1
if (verbose) {
if (class=="variety") {
print(paste(i, author, variety))
} else {
print(paste(i, author, gender))
}
}
}
return (bow)
}
lectorCampos <- function(path, lowcase = TRUE, punctuations = TRUE, numbers = TRUE, whitespaces = TRUE, accents=TRUE,swlang = "", swlist = "", verbose = TRUE){
prueba<-scan(path,what="character",sep=",")
#prueba=c(prueba)
#prueba<-read.csv("/home/anlodio@alumno.upv.es/Descargas/palabrasb.txt",sep=",")
if (lowcase) {
prueba <- tolower(prueba)
}
if (punctuations) {
prueba <- removePunctuation(prueba)
}
if(accents){
prueba<- chartr("áéíóú", "aeiou", prueba)
}
if (numbers) {
prueba <- removeNumbers(prueba)
}
if (whitespaces) {
prueba <- stripWhitespace(prueba)
}
prueba<-removeWords(prueba, stopwords("es"))
return (prueba)
}
bow_training <- GenerateBoW(path_training, vocabulary, n, class="gender")
